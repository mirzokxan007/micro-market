datasource db {
    url = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model Category {
    id             String    @map("id")             @db.Uuid()       @default(uuid())
    title          String    @map("title")          @db.VarChar(200)  
    createdAt      DateTime  @map("createdAt")      @db.Timestamp(0) @default(now())
    updatedAt      DateTime? @map("updatedAt")      @db.Timestamp(0) @updatedAt
    deletedAt      DateTime? @map("deletedAt") 

    sub_category   SubCategory[]

    @@id([id])
    @@unique([ title ])
    @@map("category")
}

model SubCategory {
    id             String    @map("id")             @db.Uuid()       @default(uuid())
    title          String    @map("title")          @db.VarChar(200)  
    categoryId     String    @map("category_id")    @db.Uuid
    createdAt      DateTime  @map("createdAt")      @db.Timestamp(0) @default(now())
    updatedAt      DateTime? @map("updatedAt")      @db.Timestamp(0) @updatedAt
    deletedAt      DateTime? @map("deletedAt") 

    category       Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    product        Product[]

    @@id([id])
    @@map("sub_category")
}

model Product {
    id             String    @map("id")             @db.Uuid()       @default(uuid()) @unique
    title          String    @map("title")          @db.VarChar(200)  
    description    String    @map("description")    @db.VarChar(200)  
    price          String    @map("price")          @db.VarChar(200)  
    status         String?   @map("status")         @db.VarChar(10)  @default("all")
    subcategoryId  String    @map("subcategory_id") @db.Uuid         
    createdAt      DateTime  @map("createdAt")      @db.Timestamp(0) @default(now())
    updatedAt      DateTime? @map("updatedAt")      @db.Timestamp(0) @updatedAt
    deletedAt      DateTime? @map("deletedAt") 

    sub_category   SubCategory @relation(fields: [subcategoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    order          Order[]

    @@id([id,subcategoryId])
    @@unique([title])
    @@map("product")
}



model Order {
    id             String    @map("id")             @db.Uuid()       @default(uuid())
    productId      String    @map("product_id")     @db.Uuid()      
    user_id        String    @map("user_id")         @db.Uuid()      
    createdAt      DateTime  @map("createdAt")      @db.Timestamp(0) @default(now())
    updatedAt      DateTime? @map("updatedAt")      @db.Timestamp(0) @updatedAt
    deletedAt      DateTime? @map("deletedAt") 

    product        Product   @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@id([id,productId,user_id])
    @@map("order")
}

model User {
    id           String    @map("id")            @db.Uuid         @default(uuid())
    username     String    @map("username")      @db.VarChar(200)
    password     String    @map("password")      @db.VarChar(200)
    createdAt    DateTime  @map("created_at")    @db.Timestamp(0) @default(now())
    updatedAt    DateTime  @map("updated_at")    @db.Timestamp(0) @updatedAt
    deletedAt    DateTime? @map("deleted_at")


    @@id([ id ])
    @@unique([ username ])
    @@map("users")
}

